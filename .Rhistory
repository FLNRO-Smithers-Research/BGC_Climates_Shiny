shiny::runApp('C:/Users/Kiri Daust/Desktop/BGC_Climates_Shiny')
library(leaflet)
?addAwesomeMarkers
?addMarkers
require(shiny)
require(reshape2)
require(shinyWidgets)
require(ggplot2)
require(vegan)
require(shinythemes)
require(devtools)
require(leaflet)
require(data.table)
require(sf)
require(climatol)
require(sp)
require(shinyBS)
require(shinyjs)
require(scales)
?addAwesomeMarkers
setwd("C:/Users/Kiri Daust/Desktop/BGC_Climates_Shiny")
###Read in climate summary data
climSummary <- fread("ClimateSummaryCurrent_v11_5.6.csv", data.table = F)
futureSummary <- fread("ClimateSummary_Future_v11_5.6.csv", data.table = F)
futureSummary$period <- as.character(futureSummary$period)
####Set up choices
BGC.choose <- as.character(unique(climSummary$BGC))
period.choose <- as.character(unique(climSummary$period))
period.ts <- c(period.choose[1:4], "2025","2055","2085")
period.other <- c(period.choose[4:length(period.choose)])
stat.choose <- as.character(unique(climSummary$Var))
var.choose <- as.character(colnames(climSummary)[-c(1:3)])
var.choose <- var.choose[order(var.choose)]
monthly <- var.choose[grep("01|02|03|04|05|06|07|08|09|10|11|12", var.choose)]
seasonal <- var.choose[grep("sp|sm|at|wt", var.choose)]
seasonalShort <- seasonal[grep("PPT|RAD|Tave|Tmin|Tmax", seasonal)]
annual <- var.choose[!var.choose %in% c(monthly,seasonal)]
zone.choose <- c("BAFA", "BG", "BWBS", "CDF",  "CMA",  "CWH",  "ESSF", "ICH",  "IDF",  "IMA",  "MH",   "MS",   "PP",   "SBPS" ,"SBS",
"SWB")
annualDirect <- c("MAT","MWMT","MCMT","TD","MAP","MSP","AHM","SHM")
futScn <- c("rcp45","rcp85")
for(i in 1:length(zone.choose)){
name <- paste(zone.choose[i],".choose", sep = "")
temp <- BGC.choose[grep(zone.choose[i],BGC.choose)]
assign(name,temp)
}
BGC.list <- list()
###Create list with choices for selection
for (i in 1:length(zone.choose)){
name <- zone.choose[i]
name2 <- paste(zone.choose[i],".choose", sep = "")
temp <- get(name2)
BGC.list[[name]] <- temp
}
###read in model data
#modelDat <- read.csv("WeatherStationLocations_updated_Normal_1961_1990MSY.csv",stringsAsFactors = FALSE)
modelDat <- fread("StPoints_Model81-10.csv", data.table = FALSE)
modelReg <- fread("StPoints_Model61-90.csv", data.table = FALSE)
stationDat <- fread("StationSummary.csv", data.table = FALSE)
stationDat <- merge(modelDat[,1:5], stationDat, by = "STATION", all = FALSE)
stationDat <- unique(stationDat)
stationDat$BGC <- as.character(stationDat$BGC)
stationDat$STATION <- as.character(stationDat$STATION)
stn.BGC <- unique(stationDat$BGC)
stn.BGC <- sort(stn.BGC)
stn.var <- colnames(stationDat)[-c(1:6)]
stn.var <- sort(stn.var)
stnModDiff <- fread("StnModelDiff2.csv",data.table = FALSE)
stnDiff.var <- colnames(stnModDiff)[-c(1:6)]
stnMeanDiff <- fread("StnBGCMeanDiff.csv", data.table = FALSE)
mapData <- fread("GridForMapsAll.csv", data.table = FALSE)
mapVar.choose <- colnames(mapData)[-c(1:5)]
mapMod.choose <- unique(mapData$GCM)
mapFut.choose <- c(2025,2055,2085)
mapScn.choose <- c("rcp45","rcp85")
stn.list <- list()
for(i in 1:length(stn.BGC)){
temp <- stationDat$STATION[stationDat$BGC == stn.BGC[i]]
name <- paste("stn.",stn.BGC[i],sep = "")
stn.list[[name]] <- temp
}
mapCol <- colorFactor(rainbow, domain = stn.var)
?awesomeIcond
?awesomeIcons
icons <- awesomeIcons(icon = "circle",  markerColor = "blue", iconColor = ~mapCol(Var), library = "fa")
View(icons)
runApp()
runApp()
runApp()
View(dat)
View(dat)
View(dat)
runApp()
runApp()
runApp()
mapCol("MAT")
runApp()
mapCol(as.factor("MAT"))
View(mapCol)
?colorFactor
View(stationDat)
mapCol(stn.var)
mapCol(as.factor(stn.var))
stn.var
mapCol <- colorFactor(rainbow(length(stn.var)), domain = stn.var)
mapCol(stn.var)
runApp()
View(climSummary)
View(stationDat)
stn.pick = c("1012573","1012628","1013051")
currVar = "MAT"
modelSub <- modelDat[modelDat$STATION %in% stn.pick,c("STATION","Latitude","Longitude","BGC", currVar)]
View(modelSub)
BGC = "SBSdk"
modelSub <- climSummary[climSummary$BGC %in% BGC & climSummary$period == "1961 - 1990" & climSummary$Var == "mean", c("BGC", currVar)]
View(modelSub)
stationSub <- stationDat[stationDat$STATION %in% stn.pick, c("STATION","Latitude","Longitude","BGC", currVar)]
colnames(stationSub)[c(1,5)] <- c("Station","Mean")
stationSub$Type <- "Station"
stNames <- stationDat[,c("STATION","Name")]
View(stationSub)
runApp()
install.packages("matrixStats")
library(dplyr)
library(rgdal)
library(sp)
library(raster)
library(rgeos)
library(maptools)
library(magrittr)
library(tibble)
library(tidyr)
library(sf)
library(tcltk)
library(foreach)
library(httr)
library(jsonlite)
library(randomForest)
library(data.table)
library(mapview)
wd <- tk_choose.dir(); setwd(wd)
# Script to create climate summaries given output from climate BC
##Kiri Daust, April 2018
######Future Data#################################
.libPaths("E:/R packages")
